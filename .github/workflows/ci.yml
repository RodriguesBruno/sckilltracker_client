name: SCKillTracker Client Build and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Extract version and generate version file
        id: version
        shell: bash
        run: |
          VERSION=$(python -c 'import re; f=open("src/client.py").read(); print(re.search(r"CLIENT_VERSION\s*=\s*[\"\\\'](.+?)[\"\\\']", f).group(1))')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "TAG=v$VERSION" >> $GITHUB_ENV
          
          cat > version_info.txt <<EOF
VSVersionInfo(
  ffi=FixedFileInfo(
    filevers=(${VERSION//./,}, 0),
    prodvers=(${VERSION//./,}, 0),
    mask=0x3f,
    flags=0x0,
    OS=0x40004,
    fileType=0x1,
    subtype=0x0,
    date=(0, 0)
  ),
  kids=[
    StringFileInfo([
      StringTable(
        u'040904B0',
        [ StringStruct(u'CompanyName', u'SCKillTracker'),
          StringStruct(u'FileDescription', u'Star Citizen Kill Tracker Client'),
          StringStruct(u'FileVersion', u'$VERSION'),
          StringStruct(u'InternalName', u'sckilltracker'),
          StringStruct(u'OriginalFilename', u'sckilltracker.exe'),
          StringStruct(u'ProductName', u'SCKillTracker Client'),
          StringStruct(u'ProductVersion', u'$VERSION') ])
      ]),
    VarFileInfo([VarStruct(u'Translation', [1033, 1200])])
  ]
)
EOF

      - name: Build client executable with PyInstaller
        shell: cmd
        run: |
          pyinstaller --clean -F ^
            --name "sckilltracker" ^
            --icon "static/sckticon.ico" ^
            --version-file version_info.txt ^
            --add-data "templates;templates" ^
            --add-data "static;static" ^
            --add-data "config;config" ^
            --add-data "src;src" ^
            app.py --uac-admin

      - name: Build updater executable with PyInstaller
        shell: cmd
        run: |
          pyinstaller --clean -F ^
            --name "sckilltracker_updater" ^
            --icon "static/sckticon.ico" ^
            --version-file version_info.txt ^
            updater.py --uac-admin

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sckilltracker_binaries
          path: |
            dist/sckilltracker.exe
            dist/sckilltracker_updater.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: sckilltracker_binaries
          path: .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: Release ${{ env.VERSION }}
          files: |
            sckilltracker.exe
            sckilltracker_updater.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
